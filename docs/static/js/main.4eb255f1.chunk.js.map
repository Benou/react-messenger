{"version":3,"sources":["components/UI/Modal.module.css","components/Messenger/MessageListItem.module.css","components/UI/Input.module.css","components/Messenger/MessageForm.module.css","components/UI/Card.module.css","components/Auth/LoginForm.module.css","components/Auth/RegisterForm.module.css","components/UI/Button.module.css","components/Auth/Login.module.css","components/Auth/Register.module.css","components/Monsters/MonsterAvatar.module.css","components/Monsters/MonsterList.module.css","components/Auth/Logout.module.css","components/Messenger/MessageList.module.css","components/Messenger/Messenger.module.css","firebase.js","hooks/use-monster-visibility-hook.js","components/UI/Card.js","components/UI/Button.js","components/UI/Modal.js","store/modal-context.js","store/auth-context.js","components/Auth/AuthGuard.js","hooks/use-form-validation-hook.js","utils/Validators.js","components/UI/Input.js","components/Auth/LoginForm.js","components/Auth/Login.js","components/Auth/RegisterForm.js","components/Auth/Register.js","components/Monsters/MonsterAvatar.js","components/Monsters/MonsterList.js","components/Auth/Logout.js","components/Messenger/MessageForm.js","components/Messenger/MessageListItem.js","components/Messenger/MessageList.js","components/Messenger/Messenger.js","App.js","index.js"],"names":["module","exports","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAuth","auth","firestore","messagesCollection","collection","messagesQuery","orderBy","limit","monstersCollection","monstersQuery","where","useMonsterVisibility","user","monsterId","monsterQuery","uid","useCollectionData","idField","monsters","useState","currentMonster","setCurrentMonster","addMonster","useCallback","add","userId","visible","setMonsterVisibility","a","doc","id","update","useEffect","length","Card","className","children","cardClassName","styles","card","filter","style","join","Button","type","rest","buttonClassName","button","Backdrop","onConfirm","backdrop","onClick","ModalOverlay","title","message","modal","header","content","actions","Modal","ReactDOM","createPortal","document","getElementById","ModalContext","React","createContext","isVisible","show","initialState","reducer","state","action","ModalContextProvider","useReducer","modalState","dispatch","showHandler","Provider","value","AuthContext","creationTime","signIn","email","password","signOut","register","localStorageKey","AuthContextProvider","showModal","useContext","useAuthState","useSignInWithEmailAndPassword","signInWithEmailAndPassword","signInError","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","registerError","Date","metadata","getTime","monster","signInHandler","memoize","localStorage","setItem","JSON","stringify","removeItem","signOutHandler","registerHandler","credentials","parse","getItem","toString","AuthGuard","render","to","pathname","useFormValidation","props","dependencies","Object","entries","map","validation","setValidation","timeout","setTimeout","reduce","key","validators","every","validator","clearTimeout","isEmpty","undefined","replace","trim","Validators","minlength","maxlength","pattern","regexp","RegExp","test","Input","label","error","inputGroupClassName","htmlFor","LoginForm","onLogin","setEmail","setPassword","touched","setTouched","required","blurHandler","event","prevTouched","target","onSubmit","preventDefault","noValidate","autoComplete","maxLength","onChange","onBlur","minLength","disabled","Login","history","useHistory","push","login","RegisterForm","onRegister","onCancel","confirmPassword","setConfirmPassword","Register","MonsterAvatar","imgClassName","avatar","src","alt","MonsterList","Logout","logout","MessageForm","onAddMessage","setMessage","placeholder","MessageListItem","text","isMyMessage","itemClassName","MessageList","items","messages","Messenger","collectionData","assign","lastMessage","el","scrollIntoView","behavior","messenger","createdAt","FieldValue","serverTimestamp","App","basename","path"],"mappings":"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","file":"static/js/main.4eb255f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"header\":\"Modal_header__b50LG\",\"content\":\"Modal_content__3zUnK\",\"actions\":\"Modal_actions__1JvhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-list-item\":\"MessageListItem_message-list-item__2__n2\",\"my-message\":\"MessageListItem_my-message__2hG70\",\"message-list-item-avatar\":\"MessageListItem_message-list-item-avatar__3kbJ2\",\"message-list-item-text\":\"MessageListItem_message-list-item-text__2n3Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-group\":\"Input_input-group__2Hdg7\",\"error\":\"Input_error__3PKU4\",\"input-group-hint\":\"Input_input-group-hint__3KtHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-form\":\"MessageForm_message-form__24d-O\",\"message-form-input\":\"MessageForm_message-form-input__cgS_g\",\"message-form-button\":\"MessageForm_message-form-button__17RGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\",\"card-content\":\"Card_card-content__3UkRz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"LoginForm_login-form__2XSjU\",\"login-form-actions\":\"LoginForm_login-form-actions__15yJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register-form\":\"RegisterForm_register-form__1c6UZ\",\"register-form-actions\":\"RegisterForm_register-form-actions__2IzsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__6-R6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3Yjas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__p8NiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"MonsterAvatar_avatar__12tYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monster-list\":\"MonsterList_monster-list__j3AIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"Logout_logout__2Ul18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-list\":\"MessageList_message-list__2fK9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"Messenger_messenger__2bFAF\"};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBPlOX2ypEClUQio0xV3Fqc8PfIfsObchI',\n  authDomain: 'react-messenger-b2e6f.firebaseapp.com',\n  projectId: 'react-messenger-b2e6f',\n  storageBucket: 'react-messenger-b2e6f.appspot.com',\n  messagingSenderId: '152213607737',\n  appId: '1:152213607737:web:61bfdb9f3ae32a317184e8',\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const firebaseAuth = firebaseApp.auth();\nexport const firestore = firebaseApp.firestore();\n\nexport const messagesCollection = firestore.collection('messages');\nexport const messagesQuery = messagesCollection.orderBy('createdAt').limit(25);\n\nexport const monstersCollection = firestore.collection('monsters');\nexport const monstersQuery = monstersCollection.where('visible', '==', true);\n","import { useCallback, useEffect, useState } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport { monstersCollection } from '../firebase';\n\nconst useMonsterVisibility = (user, monsterId) => {\n  const monsterQuery = user ? monstersCollection.where('userId', '==', user.uid) : null;\n  const [monsters] = useCollectionData(monsterQuery, { idField: 'id' });\n  const [currentMonster, setCurrentMonster] = useState(null);\n  \n  const addMonster = useCallback(() => {\n    monstersCollection.add({ userId: user.uid, monsterId, visible: false });\n  }, [user, monsterId]);\n\n  const setMonsterVisibility = useCallback(async (visible) => {\n    if (!currentMonster) {\n      return;\n    }\n    \n    await monstersCollection.doc(`${currentMonster.id}`).update({ visible });\n  }, [currentMonster]);\n\n  useEffect(() => {\n    if (monsters) {\n      monsters.length ? setCurrentMonster(monsters[0]) : addMonster();\n    }\n  }, [monsters, addMonster]);\n\n  return [currentMonster, setMonsterVisibility];\n}\n\nexport default useMonsterVisibility;\n","import styles from './Card.module.css';\n\nconst Card = ({ className, children }) => {\n  const cardClassName = [styles.card, className ? className : '']\n    .filter((style) => style.length)\n    .join(' ');\n\n  return (\n    <div className={cardClassName}>\n      <div className={styles['card-content']}>{children}</div>\n    </div>\n  );\n};\n\nexport default Card;\n","import styles from './Button.module.css';\n\nconst Button = ({ className, children, type, ...rest }) => {\n  const buttonClassName = [styles.button, className ? className : '']\n    .filter((style) => style.length)\n    .join(' ');\n\n  return (\n    <button type={type || 'button'} className={buttonClassName} {...rest}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Card from './Card';\nimport Button from './Button';\nimport styles from './Modal.module.css';\n\nconst Backdrop = ({ onConfirm }) => {\n  return <div className={styles.backdrop} onClick={onConfirm}></div>;\n};\n\nconst ModalOverlay = ({ title, message, onConfirm }) => {\n  return (\n    <Card className={styles.modal}>\n      <header className={styles.header}>\n        <h2>{title}</h2>\n      </header>\n      <div className={styles.content}>\n        <p>{message}</p>\n      </div>\n      <footer className={styles.actions}>\n        <Button onClick={onConfirm}>Okay</Button>\n      </footer>\n    </Card>\n  );\n};\n\nconst Modal = ({ title, message, onConfirm }) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onConfirm={onConfirm} />,\n        document.getElementById('backdrop-root')\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay title={title} message={message} onConfirm={onConfirm} />,\n        document.getElementById('overlay-root')\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useCallback, useReducer } from 'react';\nimport Modal from '../components/UI/Modal';\n\nconst ModalContext = React.createContext({\n  isVisible: false,\n  show: (title, message) => {},\n});\n\nconst initialState = {\n  title: '',\n  message: '',\n  isVisible: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      return {\n        ...state,\n        isVisible: true,\n        title: action.title,\n        message: action.message,\n      };\n    default:\n      return { ...initialState };\n  }\n};\n\nexport const ModalContextProvider = ({ children }) => {\n  const [modalState, dispatch] = useReducer(reducer, { ...initialState });\n\n  const showHandler = useCallback((title, message) => {\n    dispatch({ type: 'SHOW_MODAL', title, message });\n  }, []);\n\n  const confirmHandler = () => {\n    dispatch({ type: 'HIDE_MODAL' });\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{ isVisible: modalState.isVisible, show: showHandler }}\n    >\n      {modalState.isVisible && (\n        <Modal {...modalState} onConfirm={confirmHandler} />\n      )}\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalContext;\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport {\n  useAuthState,\n  useCreateUserWithEmailAndPassword,\n  useSignInWithEmailAndPassword,\n} from 'react-firebase-hooks/auth';\n\nimport { firebaseAuth } from '../firebase';\nimport useMonsterVisibility from '../hooks/use-monster-visibility-hook';\nimport ModalContext from './modal-context';\n\nconst AuthContext = React.createContext({\n  user: null,\n  creationTime: 0,\n  signIn: (email, password) => {},\n  signOut: () => {},\n  register: (email, password) => {},\n});\n\nconst localStorageKey = 'react-messenger-credentials';\n\nexport const AuthContextProvider = ({ children }) => {\n  const { show: showModal } = useContext(ModalContext);\n  const [user] = useAuthState(firebaseAuth);\n  const [signInWithEmailAndPassword, , , signInError] =\n    useSignInWithEmailAndPassword(firebaseAuth);\n  const [createUserWithEmailAndPassword, , , registerError] =\n    useCreateUserWithEmailAndPassword(firebaseAuth);\n  const creationTime = user\n    ? new Date(user.metadata.creationTime).getTime()\n    : 0;\n  const [monster, setMonsterVisibility] = useMonsterVisibility(\n    user,\n    creationTime\n  );\n\n  const signInHandler = useCallback(\n    (email, password, memoize = false) => {\n      signInWithEmailAndPassword(email, password);\n\n      if (memoize) {\n        localStorage.setItem(\n          localStorageKey,\n          JSON.stringify({ email, password })\n        );\n      } else {\n        localStorage.removeItem(localStorageKey);\n      }\n    },\n    [signInWithEmailAndPassword]\n  );\n\n  const signOutHandler = useCallback(async () => {\n    await firebaseAuth.signOut();\n    setMonsterVisibility(false);\n  }, [setMonsterVisibility]);\n\n  const registerHandler = useCallback(\n    (email, password) => {\n      createUserWithEmailAndPassword(email, password);\n    },\n    [createUserWithEmailAndPassword]\n  );\n\n  useEffect(() => {\n    const credentials = JSON.parse(localStorage.getItem(localStorageKey));\n    if (credentials) {\n      signInHandler(credentials.email, credentials.password, true);\n    }\n  }, [signInHandler]);\n\n  useEffect(() => {\n    if (signInError || registerError) {\n      showModal(\n        'Oups une erreur est survenue',\n        (signInError || registerError).toString()\n      );\n    }\n  }, [signInError, registerError, showModal]);\n\n  useEffect(() => {\n    if (user && monster) {\n      setMonsterVisibility(true);\n    }\n  }, [user, monster, setMonsterVisibility]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        creationTime,\n        signIn: signInHandler,\n        signOut: signOutHandler,\n        register: registerHandler,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\n\nconst AuthGuard = ({ children, ...rest }) => {\n  const { user } = useContext(AuthContext);\n\n  const render = () => {\n    return !!user ? children : <Redirect to={{ pathname: '/login' }} />;\n  };\n\n  return <Route {...rest} render={render} />;\n};\n\nexport default AuthGuard;\n","import { useEffect, useState } from 'react';\n\nconst useFormValidation = (props) => {\n  const dependencies = Object.entries(props).map(([, value]) => value[0]);\n  const [validation, setValidation] = useState({});\n\n  const validate = () => {\n    setValidation(\n      Object.entries(props).reduce((validation, [key, [value, validators]]) => {\n        return {\n          ...validation,\n          [key]: validators.every((validator) => validator(value)),\n        };\n      }, {})\n    );\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => validate(), 250);\n    return () => clearTimeout(timeout);\n  }, dependencies);\n\n  return validation;\n};\n\nexport default useFormValidation;\n","export const isEmpty = (value) =>\n  value === undefined ||\n  value === null ||\n  value.replace(/\\s+/g, ' ').trim().length === 0;\n\nexport class Validators {\n  static required() {\n    return (value) => !isEmpty(value);\n  }\n\n  static minlength(minlength) {\n    return (value) => {\n      if (isEmpty(value)) {\n        return true;\n      }\n      const length = !isEmpty(value) ? value.length : 0;\n      return !(length < minlength);\n    };\n  }\n\n  static maxlength(maxlength) {\n    return (value) => {\n      if (isEmpty(value)) {\n        return true;\n      }\n      const length = !isEmpty(value) ? value.length : 0;\n      return !(length > maxlength);\n    };\n  }\n\n  static pattern(pattern) {\n    return (value) => {\n      if (isEmpty(value)) {\n        return true;\n      }\n      const regexp = typeof pattern === 'string' ? new RegExp(pattern) : null;\n      return regexp && regexp.test(value);\n    };\n  }\n\n  static email() {\n    return Validators.pattern('.+@.+');\n  }\n\n  static password(value) {\n    return Validators.pattern(value);\n  }\n}\n","import styles from './Input.module.css';\n\nconst Input = ({ className, id, type, label, error, ...rest }) => {\n  const inputGroupClassName = [\n    styles['input-group'],\n    className ? className : '',\n    error ? styles['error'] : '',\n  ]\n    .filter((style) => style.length)\n    .join(' ');\n\n  return (\n    <div className={inputGroupClassName}>\n      {label && <label htmlFor={id}>{label}</label>}\n      <input id={id} type={type || 'text'} {...rest} />\n      {!!error && <p className={styles['input-group-hint']}>{error}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useFormValidation from '../../hooks/use-form-validation-hook';\nimport { Validators } from '../../utils/Validators';\nimport Button from '../UI/Button';\nimport Card from '../UI/Card';\nimport Input from '../UI/Input';\nimport styles from './LoginForm.module.css';\n\nconst LoginForm = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [touched, setTouched] = useState({});\n  const validation = useFormValidation({\n    email: [\n      email,\n      [Validators.required(), Validators.email(), Validators.maxlength(64)],\n    ],\n    password: [\n      password,\n      [\n        Validators.required(),\n        Validators.minlength(8),\n        Validators.maxlength(16),\n      ],\n    ],\n  });\n\n  const emailChangeHandler = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const blurHandler = (event) => {\n    setTouched((prevTouched) => ({ ...prevTouched, [event.target.id]: true }));\n  };\n\n  const submitLoginHandler = (event) => {\n    event.preventDefault();\n\n    if (validation.email && validation.password) {\n      onLogin({ email, password });\n    }\n  };\n\n  return (\n    <Card>\n      <form\n        className={styles['login-form']}\n        onSubmit={submitLoginHandler}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Input\n          id=\"email\"\n          type=\"email\"\n          label=\"E-mail\"\n          value={email}\n          error={\n            touched.email && !validation.email && 'Veuillez saisir votre e-mail'\n          }\n          maxLength=\"64\"\n          onChange={emailChangeHandler}\n          onBlur={blurHandler}\n        />\n        <Input\n          id=\"password\"\n          type=\"password\"\n          label=\"Mot de passe\"\n          value={password}\n          error={\n            touched.password &&\n            !validation.password &&\n            'Veuillez saisir votre mot de passe'\n          }\n          minLength=\"8\"\n          maxLength=\"16\"\n          onChange={passwordChangeHandler}\n          onBlur={blurHandler}\n        />\n        <div className={styles['login-form-actions']}>\n          <Link to=\"/register\">Créer un compte</Link>\n          <Button\n            type=\"submit\"\n            disabled={!validation.email || !validation.password}\n          >\n            Se connecter\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default LoginForm;\n","import { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport LoginForm from './LoginForm';\nimport styles from './Login.module.css';\n\nconst Login = () => {\n  const history = useHistory();\n  const { user, signIn } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/messenger');\n    }\n  }, [user, history]);\n\n  const loginHandler = ({ email, password }) => {\n    signIn(email, password);\n  };\n\n  return (\n    <div className={styles.login}>\n      <LoginForm onLogin={loginHandler} />\n    </div>\n  );\n};\n\nexport default Login;\n","import { useState } from 'react';\n\nimport useFormValidation from '../../hooks/use-form-validation-hook';\nimport { Validators } from '../../utils/Validators';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport Input from '../UI/Input';\nimport styles from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onRegister, onCancel }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [touched, setTouched] = useState({});\n  const validation = useFormValidation({\n    email: [\n      email,\n      [Validators.required(), Validators.email(), Validators.maxlength(64)],\n    ],\n    password: [\n      password,\n      [\n        Validators.required(),\n        Validators.minlength(8),\n        Validators.maxlength(16),\n      ],\n    ],\n    confirmPassword: [\n      confirmPassword,\n      [Validators.required(), Validators.password(password)],\n    ],\n  });\n\n  const emailChangeHandler = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const confirmPasswordChangeHandler = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const blurHandler = (event) => {\n    setTouched((prevTouched) => ({\n      ...prevTouched,\n      [event.target.id]: true,\n    }));\n  };\n\n  const submitLoginHandler = (event) => {\n    event.preventDefault();\n\n    if (validation.email && validation.password && validation.confirmPassword) {\n      onRegister({ email, password });\n    }\n  };\n\n  return (\n    <Card>\n      <form\n        className={styles['register-form']}\n        onSubmit={submitLoginHandler}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Input\n          id=\"email\"\n          type=\"email\"\n          label=\"E-mail\"\n          value={email}\n          error={\n            touched.email &&\n            !validation.email &&\n            'Veuillez saisir votre e-mail au bon format'\n          }\n          maxLength=\"64\"\n          onChange={emailChangeHandler}\n          onBlur={blurHandler}\n        />\n        <Input\n          id=\"password\"\n          type=\"password\"\n          label=\"Mot de passe\"\n          value={password}\n          error={\n            touched.password &&\n            !validation.password &&\n            'Veuillez saisir un mot de passe entre 8 et 16 charactères'\n          }\n          minLength=\"8\"\n          maxLength=\"16\"\n          onChange={passwordChangeHandler}\n          onBlur={blurHandler}\n        />\n        <Input\n          id=\"confirmPassword\"\n          type=\"password\"\n          label=\"Confirmation du mot de passe\"\n          value={confirmPassword}\n          error={\n            touched.confirmPassword &&\n            !validation.confirmPassword &&\n            'Veuillez saisir le même mot de passe'\n          }\n          minLength=\"8\"\n          maxLength=\"16\"\n          onChange={confirmPasswordChangeHandler}\n          onBlur={blurHandler}\n        />\n        <div className={styles['register-form-actions']}>\n          <Button onClick={onCancel}>Annuler</Button>\n          <Button\n            type=\"submit\"\n            disabled={\n              !validation.email ||\n              !validation.password ||\n              !validation.confirmPassword\n            }\n          >\n            Créer mon compte\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default RegisterForm;\n","import { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport styles from './Register.module.css';\nimport RegisterForm from './RegisterForm';\n\nconst Register = () => {\n  const history = useHistory();\n  const { user, register } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/messenger');\n    }\n  }, [user, history]);\n\n  const registerHandler = ({ email, password }) => {\n    register(email, password);\n  };\n\n  const cancelHandler = () => {\n    history.push('/login');\n  };\n\n  return (\n    <div className={styles.register}>\n      <RegisterForm onRegister={registerHandler} onCancel={cancelHandler} />\n    </div>\n  );\n};\n\nexport default Register;\n","import styles from './MonsterAvatar.module.css';\n\nconst MonsterAvatar = ({ className, monsterId }) => {\n  const imgClassName = [styles.avatar, className ? className : '']\n    .filter((style) => style.length)\n    .join(' ');\n\n  return (\n    <img\n      className={imgClassName}\n      src={`https://www.gravatar.com/avatar/${monsterId}?d=monsterid&f=y`}\n      alt=\"avatar\"\n    />\n  );\n};\n\nexport default MonsterAvatar;\n","import MonsterAvatar from './MonsterAvatar';\nimport styles from './MonsterList.module.css';\n\nconst MonsterList = ({ monsters }) => {\n  return (\n    <ul className={styles['monster-list']}>\n      {(monsters || []).map((monster) => (\n        <li key={monster.id}>\n          <MonsterAvatar monsterId={monster.monsterId}></MonsterAvatar>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MonsterList;\n","import { useContext } from 'react';\n\nimport AuthContext from '../../store/auth-context';\nimport MonsterList from '../Monsters/MonsterList';\nimport Button from '../UI/Button';\nimport styles from './Logout.module.css';\n\nconst Logout = ({ monsters }) => {\n  const { signOut } = useContext(AuthContext);\n\n  return (\n    <div className={styles.logout}>\n      <MonsterList monsters={monsters}></MonsterList>\n      <Button onClick={signOut}>Déconnexion</Button>\n    </div>\n  );\n};\n\nexport default Logout;\n","import { useState } from 'react';\n\nimport useFormValidation from '../../hooks/use-form-validation-hook';\nimport { Validators } from '../../utils/Validators';\nimport Button from '../UI/Button';\nimport Card from '../UI/Card';\nimport Input from '../UI/Input';\nimport styles from './MessageForm.module.css';\n\nconst MessageForm = ({ onAddMessage }) => {\n  const [message, setMessage] = useState('');\n  const [touched, setTouched] = useState({});\n  const validation = useFormValidation({\n    message: [message, [Validators.required(), Validators.maxlength(128)]],\n  });\n\n  const messageChangeHandler = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const blurHandler = (event) => {\n    setTouched((prevTouched) => ({ ...prevTouched, [event.target.id]: true }));\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (validation.message) {\n      onAddMessage(message);\n      setMessage('');\n      setTouched({});\n    }\n  };\n\n  return (\n    <Card>\n      <form onSubmit={submitHandler} noValidate autoComplete=\"off\">\n        <div className={styles['message-form']}>\n          <Input\n            id=\"message\"\n            className={styles['message-form-input']}\n            placeholder=\"Dites quelque chose...\"\n            value={message}\n            error={\n              touched.message &&\n              !validation.message &&\n              'Veuillez saisir un message'\n            }\n            maxLength=\"128\"\n            onChange={messageChangeHandler}\n            onBlur={blurHandler}\n          />\n          <Button\n            type=\"submit\"\n            className={styles['message-form-button']}\n            disabled={!validation.message}\n          >\n            Envoyer\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default MessageForm;\n","import MonsterAvatar from '../Monsters/MonsterAvatar';\nimport styles from './MessageListItem.module.css';\n\nconst MessageListItem = ({ id, text, isMyMessage, monsterId }) => {\n  const itemClassName = [\n    styles['message-list-item'],\n    isMyMessage ? styles['my-message'] : '',\n  ]\n    .filter((style) => style.length)\n    .join(' ');\n\n  return (\n    <li className={itemClassName} id={`message-${id}`}>\n      <MonsterAvatar className={styles['message-list-item-avatar']} monsterId={monsterId}></MonsterAvatar>\n      <div className={styles['message-list-item-text']}>{text}</div>\n    </li>\n  );\n};\n\nexport default MessageListItem;\n","import Card from '../UI/Card';\nimport MessageListItem from './MessageListItem';\nimport styles from './MessageList.module.css';\n\nconst MessageList = ({ messages }) => {\n  const items = (messages || []).map((message) => (\n    <MessageListItem {...message} key={message.id} />\n  ));\n\n  return (\n    <Card className={styles['message-list']}>\n      <ul>{items}</ul>\n    </Card>\n  );\n};\n\nexport default MessageList;\n","import firebase from 'firebase/app';\nimport { useContext, useEffect } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport {\n  messagesCollection,\n  messagesQuery,\n  monstersQuery,\n} from '../../firebase';\nimport AuthContext from '../../store/auth-context';\nimport Logout from '../Auth/Logout';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\nimport styles from './Messenger.module.css';\n\nconst Messenger = () => {\n  const { user, creationTime } = useContext(AuthContext);\n  const [collectionData] = useCollectionData(messagesQuery, { idField: 'id' });\n  const [monsters] = useCollectionData(monstersQuery, { idField: 'id' });\n  const messages = (collectionData || []).map((message) =>\n    Object.assign(message, {\n      isMyMessage: message.userId === user.uid,\n    })\n  );\n\n  const addMessageHandler = (message) => {\n    messagesCollection.add({\n      text: message,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      userId: user.uid,\n      monsterId: creationTime,\n    });\n  };\n\n  useEffect(() => {\n    if (messages.length) {\n      const lastMessage = messages[messages.length - 1];\n      const el = document.getElementById(`message-${lastMessage.id}`);\n      el && el.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  return (\n    <div className={styles.messenger}>\n      <Logout monsters={monsters}></Logout>\n      <MessageList messages={messages} />\n      <MessageForm onAddMessage={addMessageHandler} />\n    </div>\n  );\n};\n\nexport default Messenger;\n","import {\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport AuthGuard from './components/Auth/AuthGuard';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport Messenger from './components/Messenger/Messenger';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router basename=\"/react-messenger\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <AuthGuard path=\"/messenger\">\n            <Messenger />\n          </AuthGuard>\n          <Route path=\"/**\">\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport { AuthContextProvider } from './store/auth-context';\nimport { ModalContextProvider } from './store/modal-context';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <ModalContextProvider>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </ModalContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}